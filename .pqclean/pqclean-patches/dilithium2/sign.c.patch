--- work/dilithium2/scheme/sign.c
+++ work-patched/dilithium2/scheme/sign.c
@@ -78,10 +78,10 @@
 * Returns 0 (success)
 **************************************************/
 int crypto_sign_signature(uint8_t *sig,
-        size_t *siglen,
-        const uint8_t *m,
-        size_t mlen,
-        const uint8_t *sk) {
+                          size_t *siglen,
+                          const uint8_t *m,
+                          size_t mlen,
+                          const uint8_t *sk) {
     unsigned int n;
     uint8_t seedbuf[3 * SEEDBYTES + 2 * CRHBYTES];
     uint8_t *rho, *tr, *key, *mu, *rhoprime;
@@ -195,10 +195,10 @@
 * Returns 0 (success)
 **************************************************/
 int crypto_sign(uint8_t *sm,
-        size_t *smlen,
-        const uint8_t *m,
-        size_t mlen,
-        const uint8_t *sk) {
+                size_t *smlen,
+                const uint8_t *m,
+                size_t mlen,
+                const uint8_t *sk) {
     size_t i;
 
     for (i = 0; i < mlen; ++i) {
@@ -223,10 +223,10 @@
 * Returns 0 if signature could be verified correctly and -1 otherwise
 **************************************************/
 int crypto_sign_verify(const uint8_t *sig,
-        size_t siglen,
-        const uint8_t *m,
-        size_t mlen,
-        const uint8_t *pk) {
+                       size_t siglen,
+                       const uint8_t *m,
+                       size_t mlen,
+                       const uint8_t *pk) {
     unsigned int i;
     uint8_t buf[K * POLYW1_PACKEDBYTES];
     uint8_t rho[SEEDBYTES];
@@ -311,10 +311,10 @@
 * Returns 0 if signed message could be verified correctly and -1 otherwise
 **************************************************/
 int crypto_sign_open(uint8_t *m,
-        size_t *mlen,
-        const uint8_t *sm,
-        size_t smlen,
-        const uint8_t *pk) {
+                     size_t *mlen,
+                     const uint8_t *sm,
+                     size_t smlen,
+                     const uint8_t *pk) {
     size_t i;
 
     if (smlen < CRYPTO_BYTES) {

