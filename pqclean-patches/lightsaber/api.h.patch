--- work/lightsaber/scheme/api.h
+++ work-patched/lightsaber/scheme/api.h
@@ -1,25 +1,18 @@
-#ifndef API_H
-#define API_H
+#ifndef PQCLEAN_NAMESPACE_API_H
+#define PQCLEAN_NAMESPACE_API_H
 
-#include "SABER_params.h"
 
-#if SABER_L == 2
-	#define CRYPTO_ALGNAME "LightSaber"
-#elif SABER_L == 3
-	#define CRYPTO_ALGNAME "Saber"
-#elif SABER_L == 4
-	#define CRYPTO_ALGNAME "FireSaber"
-#else
-	#error "Unsupported SABER parameter."
-#endif
-
-#define CRYPTO_SECRETKEYBYTES SABER_SECRETKEYBYTES
-#define CRYPTO_PUBLICKEYBYTES SABER_PUBLICKEYBYTES
-#define CRYPTO_BYTES SABER_KEYBYTES
-#define CRYPTO_CIPHERTEXTBYTES SABER_BYTES_CCA_DEC
-
-int crypto_kem_keypair(unsigned char *pk, unsigned char *sk);
-int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk);
-int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk);
+#define PQCLEAN_NAMESPACE_CRYPTO_ALGNAME "LightSaber"
+#define PQCLEAN_NAMESPACE_CRYPTO_BYTES 32
+#define PQCLEAN_NAMESPACE_CRYPTO_CIPHERTEXTBYTES 736
+#define PQCLEAN_NAMESPACE_CRYPTO_PUBLICKEYBYTES 672
+#define PQCLEAN_NAMESPACE_CRYPTO_SECRETKEYBYTES 1568
 
-#endif /* api_h */
+int PQCLEAN_NAMESPACE_crypto_kem_keypair(unsigned char *pk, unsigned char *sk);
+
+int PQCLEAN_NAMESPACE_crypto_kem_enc(unsigned char *ct, unsigned char *k, const unsigned char *pk);
+
+int PQCLEAN_NAMESPACE_crypto_kem_dec(unsigned char *k, const unsigned char *ct, const unsigned char *sk);
+
+
+#endif /* PQCLEAN_NAMESPACE_API_H */

