--- work/kyber768/scheme/verify.c
+++ work-patched/kyber768/scheme/verify.c
@@ -1,6 +1,6 @@
+#include "verify.h"
 #include <stddef.h>
 #include <stdint.h>
-#include "verify.h"
 
 /*************************************************
 * Name:        verify
@@ -13,15 +13,15 @@
 *
 * Returns 0 if the byte arrays are equal, 1 otherwise
 **************************************************/
-int verify(const uint8_t *a, const uint8_t *b, size_t len)
-{
-  size_t i;
-  uint8_t r = 0;
+int verify(const uint8_t *a, const uint8_t *b, size_t len) {
+    size_t i;
+    uint8_t r = 0;
 
-  for(i=0;i<len;i++)
-    r |= a[i] ^ b[i];
+    for (i = 0; i < len; i++) {
+        r |= a[i] ^ b[i];
+    }
 
-  return (-(uint64_t)r) >> 63;
+    return (-(uint64_t)r) >> 63;
 }
 
 /*************************************************
@@ -37,11 +37,11 @@
 *              size_t len:       Amount of bytes to be copied
 *              uint8_t b:        Condition bit; has to be in {0,1}
 **************************************************/
-void cmov(uint8_t *r, const uint8_t *x, size_t len, uint8_t b)
-{
-  size_t i;
+void cmov(uint8_t *r, const uint8_t *x, size_t len, uint8_t b) {
+    size_t i;
 
-  b = -b;
-  for(i=0;i<len;i++)
-    r[i] ^= b & (r[i] ^ x[i]);
+    b = -b;
+    for (i = 0; i < len; i++) {
+        r[i] ^= b & (r[i] ^ x[i]);
+    }
 }

